# -*- coding: utf-8 -*-
"""fruit_classification _k-nearest_neighbor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pIQmja7umEOyKgRvKvwavbSGe81JW4_w

Import Library yang dibutuhkan
"""

import numpy as np
import pandas as pd

"""Baca dataset, sumber dataset (https://www.kaggle.com/datasets)"""

buah = pd.read_table("fruit_data_with_colors.txt")
buah.head(30)

"""Cek Isi Dataset"""

buah.info()

"""Cek Hubungan label dan nama"""

label_mapping = dict(zip(buah.fruit_label.unique(),buah.fruit_name.unique()))
label_mapping

buah['fruit_name'].value_counts()

"""Missing Value"""

import seaborn as sns
g = sns.PairGrid(buah,hue= "fruit_name")
g.map_diag(sns.histplot)
g.map_offdiag(sns.scatterplot)

"""Checking NaN Values"""

buah.isna().sum()

"""Membuang data yang bersifat text/tidak dibutuhkan(fruit_name fruit_subtype)"""

buah = buah.drop(["fruit_name","fruit_subtype"],axis=1)
buah.head()

"""Melakukan scaling untukl meningkatkan performa"""

x = buah[["mass","width","height","color_score"]]
y = buah['fruit_label']

from sklearn import preprocessing
scaler = preprocessing.MinMaxScaler()
x_scaled = scaler.fit_transform(x)
x_scaled

"""Membuktikan pengaruh scaling pada data untuk meningkatkan performa"""

from sklearn.model_selection import train_test_split

x_train, x_test,y_train,y_test= train_test_split(x,y,random_state=0)
x_train_scaled,x_test_scaled, y_train_scaled, y_test_scaled= train_test_split(x_scaled,y, random_state=0)

"""Model tanpa scaling"""

from sklearn.neighbors import KNeighborsClassifier
knn1 = KNeighborsClassifier(n_neighbors=3).fit(x_train,y_train)
knn1.score(x_test,y_test)

"""Model dengan scaling"""

from sklearn.neighbors import KNeighborsClassifier
knn2 = KNeighborsClassifier(n_neighbors=3).fit(x_train_scaled,y_train) #model dengan scaling
knn2.score(x_test_scaled,y_test)

"""K terbaik"""

K= np.arange(2,30)

scores =[]

for k in K:
  model = KNeighborsClassifier(n_neighbors=k).fit(x_train_scaled,y_train_scaled)
  score = model.score(x_test_scaled,y_test_scaled)
  scores.append(score)

"""Print scores"""

import matplotlib.pyplot as plt
plt.plot(K,scores, c= "blue")
plt.title('KNN')
plt.ylabel("akurasi")
plt.xlabel("K")
plt.show()